name: Test Current Commit

on:
  pull_request:
    branches:
      - main

jobs:
  test-current-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Run tests
        id: run_tests
        run: |
          # Create directory for test results
          mkdir -p test-results
          
          # Get current commit info
          COMMIT_SHA=$(git rev-parse HEAD)
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          
          echo "Testing current commit: $COMMIT_SHA - $COMMIT_MESSAGE"
          
          # Run tests and save results to a file
          RESULT_FILE="test-results/test-result.txt"
          if python -m pytest tests/ -v --cov=. --cov-report=xml:test-results/coverage.xml > $RESULT_FILE 2>&1; then
            echo "✅ Tests PASSED"
            COMMIT_STATUS="✅ PASSED"
            EXIT_CODE=0
          else
            echo "❌ Tests FAILED"
            COMMIT_STATUS="❌ FAILED"
            EXIT_CODE=1
          fi
          
          # Extract summary stats
          SUMMARY=$(grep -A 5 "===.*collected" $RESULT_FILE | tr '\n' ' ')
          
          # Add to summary
          echo "$COMMIT_SHA - $COMMIT_STATUS - $COMMIT_MESSAGE - $SUMMARY" > test-results/summary.txt
          
          # Display summary
          echo "==== Test Results Summary ===="
          cat test-results/summary.txt
          
          # Set output variables
          echo "status=$COMMIT_STATUS" >> $GITHUB_OUTPUT
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT
          
          exit $EXIT_CODE

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          
      - name: Post results comment
        if: always()
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          
          # Get commit info
          COMMIT_SHA=$(git rev-parse HEAD)
          SHORT_SHA="${COMMIT_SHA:0:7}"
          
          # Read test status and summary
          TEST_LINE=$(cat test-results/summary.txt)
          STATUS=$(echo "$TEST_LINE" | cut -d' ' -f3)
          MESSAGE=$(echo "$TEST_LINE" | cut -d' ' -f5-)
          SUMMARY=$(echo "$TEST_LINE" | grep -o "collected.*" || echo "")
          
          # Create the comment content
          {
            echo "## 🧪 Test Results for Current Commit"
            echo ""
            echo "| Commit | Status | Message | Summary |"
            echo "| ------ | ------ | ------- | ------- |"
            echo "| [\`$SHORT_SHA\`](https://github.com/${{ github.repository }}/commit/$COMMIT_SHA) | $STATUS | $MESSAGE | $SUMMARY |"
            echo ""
            echo "For detailed test logs, see the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})."
          } > pr_test_comment.txt
          
          # Post comment to PR
          gh pr comment $PR_NUMBER --body-file pr_test_comment.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 